{
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:solid/typescript",
    "plugin:@typescript-eslint/eslint-recommended", // Updates the eslint:recommended config to better suit Typescript
    "plugin:@typescript-eslint/recommended", // set of opinionated rules that adhere to TypeScript best practices
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:eslint-comments/recommended",
    "airbnb-base",
    "airbnb-typescript/base",
    "prettier",
    // Make sure this is always the last configuration in the extends array
    "plugin:prettier/recommended" // Enables eslint-plugin-prettier and displays prettier errors as ESLint errors.
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2021, // Allows for the parsing of modern ECMAScript features
    "sourceType": "module", // Allows for the use of imports
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.json"
  },
  "plugins": ["@typescript-eslint", "solid", "jsx-a11y"],
  "root": true, // For configuration cascading
  "rules": {
    "import/extensions": ["off"],
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "array-simple"
      }
    ],
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-imports": "error",
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": true
      }
    ],
    "@typescript-eslint/member-delimiter-style": "error",
    "@typescript-eslint/method-signature-style": "error",
    "@typescript-eslint/no-confusing-non-null-assertion": "error",
    "@typescript-eslint/no-dynamic-delete": "error",
    "@typescript-eslint/no-require-imports": "error",
    "@typescript-eslint/no-unnecessary-boolean-literal-compare": "error",
    "@typescript-eslint/no-unnecessary-condition": "error",
    "@typescript-eslint/no-unnecessary-type-arguments": "error",
    "@typescript-eslint/no-use-before-define": [
      "error",
      {
        "functions": false
      }
    ],
    "@typescript-eslint/non-nullable-type-assertion-style": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "@typescript-eslint/promise-function-async": "error",
    "@typescript-eslint/strict-boolean-expressions": "error",
    "no-param-reassign": [
      "error",
      {
        "props": true,
        "ignorePropertyModificationsForRegex": ["^draft", "keys"]
      }
    ],
    "import/prefer-default-export": "off",
    "import/no-default-export": "error",
    "jsx-a11y/label-has-associated-control": ["error", { "assert": "either" }],
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": false
      }
    ]
  },
  "overrides": [
    {
      "files": ["src/**/*.test.{ts,tsx}"],
      "extends": [
        "plugin:jest/recommended",
        "plugin:jest/style",
        "plugin:jest-dom/recommended",
        "plugin:testing-library/dom"
      ],
      "rules": {
        "testing-library/no-await-sync-events": "error",
        "testing-library/no-manual-cleanup": "error",
        "testing-library/no-render-in-setup": "error",
        "testing-library/prefer-explicit-assert": "error",
        "testing-library/prefer-wait-for": "error",
        "testing-library/prefer-user-event": "error",
        "testing-library/no-debugging-utils": "warn",
        "jest/no-focused-tests": "warn"
      }
    }
  ]
}
